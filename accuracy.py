import pandas as pd

rds = [
    "uk_1",
    "uk_2",
    "uk_3",
    "uk_4",
    "uk_5",
    "uk_6",
    "uk_octas",
    "uk_quarters",
    "uk_semis",
    "uk_finals",
    "niles_1",
    "niles_2",
    "niles_3",
    "niles_4",
    "niles_5",
    "niles_6",
    "niles_dubs",
    "niles_octas",
    "niles_quarters",
    "niles_semis",
    "niles_finals",
    "grapevine_1",
    "grapevine_2",
    "grapevine_3",
    "grapevine_4",
    "grapevine_5",
    "grapevine_6",
    "grapevine_dubs",
    "grapevine_octas",
    "grapevine_quarters",
    "grapevine_semis",
    "grapevine_finals",
    "waru_1",
    "waru_2",
    "waru_3",
    "waru_4",
    "waru_5",
    "waru_6",
    "waru_octas",
    "waru_quarters",
    "waru_semis",
    "waru_finals",
    "greenhill_1",
    "greenhill_2",
    "greenhill_3",
    "greenhill_4",
    "greenhill_5",
    "greenhill_6",
    "greenhill_dubs",
    "greenhill_octas",
    "greenhill_quarters",
    "greenhill_semis",
    "greenhill_finals",
    "bvsw_1",
    "bvsw_2",
    "bvsw_3",
    "bvsw_4",
    "bvsw_5",
    "bvsw_6",
    "bvsw_octas",
    "bvsw_quarters",
    "bvsw_semis",
    "bvsw_finals",
    "lb_1",
    "lb_2",
    "lb_3",
    "lb_4",
    "lb_5",
    "lb_6",
    "lb_dubs",
    "lb_octas",
    "lb_quarters",
    "lb_semis",
    "gds_1",
    "gds_2",
    "gds_3",
    "gds_4",
    "gds_5",
    "gds_6",
    "gds_octas",
    "gds_quarters",
    "gds_finals",
    "marist_1",
    "marist_2",
    "marist_3",
    "marist_4",
    "marist_5",
    "marist_6",
    "marist_octas",
    "marist_quarters",
    "marist_semis",
    "marist_finals",
    "mac_1",
    "mac_2",
    "mac_3",
    "mac_4",
    "mac_5",
    "mac_6",
    "mac_octas",
    "mac_quarters",
    "mac_semis",
    "mac_finals",
    "delores_1",
    "delores_2",
    "delores_3",
    "delores_4",
    "delores_5",
    "delores_6",
    "delores_octas",
    "delores_quarters",
    "delores_semis",
    "delores_finals",
    "tw_1",
    "tw_2",
    "tw_3",
    "tw_4",
    "tw_5",
    "tw_quarters",
    "tw_finals",
    "jwp_1",
    "jwp_2",
    "jwp_3",
    "jwp_4",
    "jwp_5",
    "jwp_6",
    "jwp_octas",
    "jwp_quarters",
    "jwp_semis",
    "jwp_finals",
    "wm_1",
    "wm_2",
    "wm_3",
    "wm_4",
    "wm_5",
    "wm_6",
    "wm_octas",
    "wm_quarters",
    "wm_semis",
    "wm_finals",
    "nyc_1",
    "nyc_2",
    "nyc_3",
    "nyc_4",
    "nyc_5",
    "nyc_6",
    "nyc_dubs",
    "nyc_octas",
    "nyc_quarters",
    "nyc_semis",
    "nt_1",
    "nt_2",
    "nt_3",
    "nt_4",
    "nt_5",
    "nt_6",
    "nt_dubs",
    "nt_octas",
    "nt_quarters",
    "nt_semis",
    "nt_finals",
    "meadows_1",
    "meadows_2",
    "meadows_3",
    "meadows_4",
    "meadows_5",
    "meadows_6",
    "meadows_octas",
    "meadows_quarters",
    "meadows_semis",
    "meadows_finals",
    "hot_1",
    "hot_2",
    "hot_3",
    "hot_4",
    "hot_5",
    "hot_6",
    "hot_dubs",
    "hot_octas",
    "hot_quarters",
    "hot_semis",
    "hot_finals",
    "iowa_1",
    "iowa_2",
    "iowa_3",
    "iowa_4",
    "iowa_5",
    "iowa_6",
    "iowa_octas",
    "iowa_quarters",
    "iowa_semis",
    "iowa_finals",
    "kcc_1",
    "kcc_2",
    "kcc_3",
    "kcc_4",
    "kcc_5",
    "kcc_6",
    "kcc_dubs",
    "kcc_octas",
    "kcc_quarters",
    "kcc_semis",
    "kcc_finals",
    "udd_1",
    "udd_2",
    "udd_3",
    "udd_4",
    "udd_5",
    "udd_6",
    "udd_octas",
    "udd_quarters",
    "udd_semis",
    "udd_finals",
    "damus_1",
    "damus_2",
    "damus_3",
    "damus_4",
    "damus_5",
    "damus_6",
    "damus_octas",
    "damus_quarters",
    "damus_semis",
    "damus_finals",
    "mich_1",
    "mich_2",
    "mich_3",
    "mich_4",
    "mich_5",
    "mich_6",
    "mich_dubs",
    "mich_octas",
    "mich_quarters",
    "mich_semis",
    "mich_finals",
    "gbx_1",
    "gbx_2",
    "gbx_3",
    "gbx_4",
    "gbx_5",
    "gbx_6",
    "gbx_7",
    "gbx_dubs",
    "gbx_octas",
    "gbx_quarters",
    "gbx_semis",
    "gbx_finals",
    "alta_1",
    "alta_2",
    "alta_3",
    "alta_4",
    "alta_5",
    "alta_6",
    "alta_octas",
    "alta_quarters",
    "alta_semis",
    "ut_1",
    "ut_2",
    "ut_3",
    "ut_4",
    "ut_5",
    "ut_6",
    "ut_dubs",
    "ut_octas",
    "ut_quarters",
    "ut_semis",
    "mamo_1",
    "mamo_2",
    "mamo_3",
    "mamo_4",
    "mamo_5",
    "mamo_6",
    "mamo_octas",
    "mamo_quarters",
    "mamo_semis",
    "mamo_finals",
    "ds1_1",
    "ds1_2",
    "ds1_3",
    "ds1_4",
    "ds1_5",
    "ds1_6",
    "ds1_dubs",
    "ds1_octas",
    "ds1_quarters",
    "ds1_semis",
    "ds1_finals",
    "lcc_1",
    "lcc_2",
    "lcc_3",
    "lcc_4",
    "lcc_5",
    "lcc_6",
    "lcc_octas",
    "lcc_quarters",
    "lcc_semis",
    "lcc_finals",
    "in_1",
    "in_2",
    "in_3",
    "in_4",
    "in_5",
    "in_6",
    "in_quarters",
    "in_semis",
    "dowling_1",
    "dowling_2",
    "dowling_3",
    "dowling_4",
    "dowling_5",
    "dowling_6",
    "dowling_octas",
    "dowling_quarters",
    "dowling_semis",
    "blake_1",
    "blake_2",
    "blake_3",
    "blake_4",
    "blake_5",
    "blake_6",
    "blake_7",
    "blake_dubs",
    "blake_octas",
    "blake_quarters",
    "blake_semis",
    "mba_1",
    "mba_2",
    "mba_3",
    "mba_4",
    "mba_5",
    "mba_6",
    "mba_octas",
    "mba_quarters",
    "mba_semis",
    "mba_finals",
]
results = []
for i in rds:
    results.append(pd.DataFrame(pd.read_csv("data_ip/" + i + ".csv")))
teams = pd.read_csv("teams_mba.csv")


def accuracy(rds, results, teams, num):
    df = pd.merge(results[num], teams, left_on="Aff", right_on="Team")
    df["A_ELO"] = df["ELO"]
    df = df[["Aff", "A_ELO", "Neg", "Win"]]
    df = pd.merge(df, teams, left_on="Neg", right_on="Team")
    df["N_ELO"] = df["ELO"]
    df = df[["Aff", "A_ELO", "Neg", "N_ELO", "Win"]]
    is_upset = (df["A_ELO"] > df["N_ELO"]) & (df["Win"] == "Neg") | (
        df["N_ELO"] > df["A_ELO"]
    ) & (df["Win"] == "Aff")
    return rds[num], is_upset.sum(), df.shape[0]


df = pd.DataFrame(columns=["round", "upsets", "total"])
for i in range(len(rds)):
    x, y, z = accuracy(rds, results, teams, i)
    df.loc[len(df)] = {"round": x, "upsets": y, "total": z}
print(1 - sum(df["upsets"]) / sum(df["total"]))
